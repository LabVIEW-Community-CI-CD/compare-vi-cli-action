{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Build CompareVI CLI (Release)",
      "type": "process",
      "command": "dotnet",
      "args": [
        "build",
        "src/CompareVi.Tools.Cli",
        "-c",
        "Release",
        "-nologo"
      ],
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "problemMatcher": "$msCompile",
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Handoff: Apply Toggles + Telemetry",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoLogo",
        "-NoProfile",
        "-File",
        "tools/Print-AgentHandoff.ps1",
        "-ApplyToggles",
        "-AutoTrim"
      ],
      "problemMatcher": [],
      "presentation": { "reveal": "always", "panel": "shared" }
    },
    {
      "label": "Build Tools Image (Docker)",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoLogo",
        "-NoProfile",
        "-File",
        "tools/Build-ToolsImage.ps1",
        "-Tag",
        "comparevi-tools:local"
      ],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Run Non-LV Checks (Tools Image)",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoLogo",
        "-NoProfile",
        "-File",
        "tools/Run-NonLVChecksInDocker.ps1",
        "-ToolsImageTag",
        "comparevi-tools:local",
        "-UseToolsImage"
      ],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Run Non-LV Checks (Tools Image, strict)",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoLogo",
        "-NoProfile",
        "-File",
        "tools/Run-NonLVChecksInDocker.ps1",
        "-ToolsImageTag",
        "comparevi-tools:local",
        "-UseToolsImage",
        "-FailOnWorkflowDrift"
      ],
      "problemMatcher": [],
      "presentation": { "reveal": "always", "panel": "dedicated" }
    },
    {
      "label": "Parse CLI Compare Outcome (.NET)",
      "type": "process",
      "command": "dotnet",
      "args": [
        "run",
        "--project",
        "src/CompareVi.Tools.Cli",
        "--",
        "compare",
        "parse",
        "--search",
        "tests/results/compare-cli",
        "--out",
        "tests/results/compare-cli/compare-outcome.json"
      ],
      "dependsOn": [
        "Build CompareVI CLI (Release)"
      ],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Integration (Standing Priority): Auto Push + Start + Watch",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoLogo",
        "-NoProfile",
        "-File",
        "tools/Start-IntegrationGated.ps1",
        "-AutoPush",
        "-Start",
        "-Watch"
      ],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Integration (Standing Priority): Watch existing run",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoLogo",
        "-NoProfile",
        "-File",
        "tools/Start-IntegrationGated.ps1",
        "-Watch"
      ],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "CI Watch (REST)",
      "type": "shell",
      "command": "npm",
      "args": [
        "run",
        "ci:watch:rest",
        "--",
        "--run-id",
        "${input:runId}"
      ],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Run Non-LV Checks (Docker)",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoLogo",
        "-NoProfile",
        "-File",
        "tools/Run-NonLVChecksInDocker.ps1"
      ],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Run Non-LV Checks (Docker, strict)",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoLogo",
        "-NoProfile",
        "-File",
        "tools/Run-NonLVChecksInDocker.ps1",
        "-FailOnWorkflowDrift"
      ],
      "problemMatcher": [],
      "presentation": { "reveal": "always", "panel": "dedicated" }
    },
    {
      "label": "Run Validate Container (CLI smoke)",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoLogo",
        "-NoProfile",
        "-File",
        "tools/Run-ValidateContainer.ps1"
      ],
      "problemMatcher": [],
      "presentation": { "reveal": "always", "panel": "dedicated" }
    },
    {
      "label": "Run PrePush Checks",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoLogo",
        "-NoProfile",
        "-File",
        "tools/PrePush-Checks.ps1"
      ],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Run Pester Tests (Unit)",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoLogo",
        "-NoProfile",
        "-File",
        "./Invoke-PesterTests.ps1"
      ],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Run Pester Tests (Integration)",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoLogo",
        "-NoProfile",
        "-File",
        "./Invoke-PesterTests.ps1",
        "-IncludeIntegration",
        "true"
      ],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    }
  
    ,
    {
      "label": "Standing Priority: Refresh Snapshot",
      "type": "shell",
      "command": "npm",
      "args": ["run","priority:sync"],
      "options": { "cwd": "" },
      "problemMatcher": [],
      "presentation": { "reveal": "always", "panel": "shared" }
    },
    {
      "label": "Standing Priority: Show Router",
      "type": "shell",
      "command": "npm",
      "args": ["run","priority:show"],
      "options": { "cwd": "" },
      "problemMatcher": [],
      "presentation": { "reveal": "always", "panel": "shared" }
    },
    {
      "label": "Standing Priority: Handoff Tests",
      "type": "shell",
      "command": "npm",
      "args": ["run","priority:handoff-tests"],
      "options": { "cwd": "" },
      "problemMatcher": [],
      "presentation": { "reveal": "always", "panel": "shared" }
    },
    {
      "label": "Dispatch Orchestrated (develop, include_integration=true)",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoLogo",
        "-NoProfile",
        "-File",
        "tools/Dispatch-WithSample.ps1",
        "ci-orchestrated.yml",
        "-Ref",
        "develop",
        "-IncludeIntegration",
        "true"
      ],
      "problemMatcher": [],
      "presentation": { "reveal": "always", "panel": "dedicated" }
    },
    {
      "label": "Follow Orchestrated Run (Docker)",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoLogo",
        "-NoProfile",
        "-File",
        "tools/Follow-OrchestratedRun.ps1",
        "-RunId",
        "${input:runId}",
        "-Watch"
      ],
      "problemMatcher": [],
      "presentation": { "reveal": "always", "panel": "dedicated" }
    },
    {
      "label": "LVCompare â€” VI2 root vs tmp-commit",
      "type": "shell",
      "command": "pwsh",
      "args": [
        "-NoLogo",
        "-NoProfile",
        "-Command",
        "& { param($year,$bits); $yearKey=[string]$year; $bitsKey=[string]$bits; $pf64=[System.Environment]::GetFolderPath([System.Environment+SpecialFolder]::ProgramFiles); if(-not $pf64){ $pf64=[System.Environment]::GetEnvironmentVariable(\"ProgramW6432\") }; if(-not $pf64){ $pf64=[System.Environment]::GetEnvironmentVariable(\"ProgramFiles\") }; $pf86=[System.Environment]::GetFolderPath([System.Environment+SpecialFolder]::ProgramFilesX86); if(-not $pf86){ $pf86=[System.Environment]::GetEnvironmentVariable(\"ProgramFiles(x86)\") }; if(-not $pf86){ $pf86=$pf64 }; if(-not $pf64){ Write-Error (\"Unable to resolve Program Files (64-bit) path.\"); exit 2 }; if(-not $pf86){ Write-Error (\"Unable to resolve Program Files (x86) path.\"); exit 2 }; $map=@{ \"2021\"=@{ \"32\"=(Join-Path $pf86 \"National Instruments\\\\LabVIEW 2021\\\\LabVIEW.exe\"); \"64\"=(Join-Path $pf64 \"National Instruments\\\\LabVIEW 2021\\\\LabVIEW.exe\") }; \"2022\"=@{ \"32\"=(Join-Path $pf86 \"National Instruments\\\\LabVIEW 2022\\\\LabVIEW.exe\"); \"64\"=(Join-Path $pf64 \"National Instruments\\\\LabVIEW 2022\\\\LabVIEW.exe\") }; \"2023\"=@{ \"32\"=(Join-Path $pf86 \"National Instruments\\\\LabVIEW 2023\\\\LabVIEW.exe\"); \"64\"=(Join-Path $pf64 \"National Instruments\\\\LabVIEW 2023\\\\LabVIEW.exe\") }; \"2024\"=@{ \"32\"=(Join-Path $pf86 \"National Instruments\\\\LabVIEW 2024\\\\LabVIEW.exe\"); \"64\"=(Join-Path $pf64 \"National Instruments\\\\LabVIEW 2024\\\\LabVIEW.exe\") }; \"2025\"=@{ \"32\"=(Join-Path $pf86 \"National Instruments\\\\LabVIEW 2025\\\\LabVIEW.exe\"); \"64\"=(Join-Path $pf64 \"National Instruments\\\\LabVIEW 2025\\\\LabVIEW.exe\") } }; if(-not $map.ContainsKey($yearKey)){ Write-Error (\"Invalid LabVIEW year: {0}\" -f $yearKey); exit 2 }; $yearOptions=$map[$yearKey]; $lv=$null; if($yearOptions){ $lv=$yearOptions[$bitsKey] }; if(-not $lv){ Write-Error (\"Invalid LabVIEW bitness for year {0}: {1}\" -f $yearKey,$bitsKey); exit 2 }; if(-not (Test-Path -LiteralPath $lv -PathType Leaf)){ Write-Error (\"LabVIEW.exe not found at: {0}\" -f $lv); exit 2 }; $ws=\"${workspaceFolder}\"; $script=Join-Path (Join-Path $ws \"tools\") \"Invoke-LVCompare.ps1\"; $base=Join-Path $ws \"VI2.vi\"; $head=Join-Path (Join-Path $ws \"tmp-commit-236ffab\") \"VI2.vi\"; & $script -BaseVi $base -HeadVi $head -LabVIEWExePath $lv -OutputDir \"tests/results/manual-vi2-compare\" -RenderReport } -year ${input:lvYear} -bits ${input:lvBits}"
      ],
      "problemMatcher": [],
      "presentation": {
        "reveal": "always",
        "panel": "dedicated"
      }
    },
    {
      "label": "Standing Priority (#127): Quick Local Queue",
      "dependsOrder": "sequence",
      "dependsOn": [
        "Handoff: Apply Toggles + Telemetry",
        "Build Tools Image (Docker)",
        "Run Non-LV Checks (Tools Image, strict)",
        "Run Pester Tests (Unit)"
      ]
    }
 ]
  ,
  "inputs": [
    {
      "id": "runId",
      "type": "promptString",
      "description": "Enter GitHub workflow run id to follow",
      "default": ""
    },
    {
      "id": "lvYear",
      "type": "pickString",
      "description": "Select LabVIEW year",
      "options": ["2021","2022","2023","2024","2025"],
      "default": "2025"
    },
    {
      "id": "lvBits",
      "type": "pickString",
      "description": "Select LabVIEW bitness",
      "options": ["64","32"],
      "default": "64"
    }
  ]
}
