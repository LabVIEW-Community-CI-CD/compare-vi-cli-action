   1: # Manifest bytes + LVCompare preflight hardening
   2: 
   3: ## Summary
   4: - Replace `minBytes` with exact `bytes` in `fixtures.manifest.json` and schema.
   5: - Refine validator to detect `sizeMismatch` (actual vs recorded bytes), fallback to global `-MinBytes` only when `bytes` missing.
   6: - Harden LVCompare orchestration to avoid UI popups by routing calls through `CompareVI` preflight and adding guards in debug helpers.
   7: - Keep LVCompare-only interface; remove LabVIEW.exe involvement.
   8: 
   9: ## Motivation
  10: - Eliminate ambiguous size policy (`minBytes`) and drift from small file changes.
  11: - Fix fast error popups by preventing LVCompare’s “same filename different directories” dialog and standardizing invocation.
  12: - Improve developer-facing diagnostics and stability for local and CI runs.
  13: 
  14: ## Changes
  15: - Schema: `docs/schemas/fixture-manifest-v1.schema.json` (require `bytes` instead of `minBytes`).
  16: - Manifest: `fixtures.manifest.json` now records `bytes` for `VI1.vi` and `VI2.vi`.
  17: - Generator: `tools/Update-FixtureManifest.ps1` now writes `bytes` from file length.
  18: - Validator: `tools/Validate-Fixtures.ps1`
  19:   - Enforce recorded `bytes` when present → `sizeMismatch` issues.
  20:   - Fallback to global `-MinBytes` only if `bytes` absent.
  21:   - JSON summary gains `summaryCounts.sizeMismatch`.
  22: - Tests adjusted to avoid repo pollution and reflect `bytes` semantics (`$TestDrive` for snapshots, duplicate tests updated).
  23: - Orchestrator: `scripts/On-FixtureValidationFail.ps1` routes drift report LVCompare execution via `CompareVI` (preflight), captures exit code/command/duration, generates HTML report.
  24: - Debug helper: `scripts/Capture-LVCompare.ps1` adds preflight guard and `CreateNoWindow` to reduce UI popups.
  25: - README updated for `sizeMismatch` and policy notes.
  26: 
  27: ## Backwards compatibility
  28: - Additive changes in validator output (new `sizeMismatch`); existing fields preserved.
  29: - Manifest change is breaking for producers that expected `minBytes`; this repository fully migrated.
  30: 
  31: ## Validation
  32: - Local unit run: validator OK, updated tests pass; integration should be run on self-hosted with LVCompare present.
  33: - Manual checks:
  34:   - `tools/Validate-Fixtures.ps1 -Json` → ok=true.
  35:   - Drift orchestrator with `-RenderReport` simulates compare and writes artifacts.
  36: 
  37: ## Follow-ups (separate PR(s))
  38: - Add Session Index (`session-index-v1`) to unify links to pester summary, leak report, drift, loop, compare exec.
  39: - Optional enrichments: pester summary tag/file rollups; runbook per‑phase timings; compare exec diagnostics.
  40: 
  41: ## Risks and mitigations
  42: - Schema consumers of `minBytes` must update (we’ve updated repo scripts/tests and docs here).
  43: - LVCompare preflight dependability verified via existing CompareVI tests; additional smoke tests can be added.
  44: 
  45: ## Checklist
  46: - [x] Update schemas/manifests/generator/validator
  47: - [x] Update tests to reflect `bytes`
  48: - [x] Harden LVCompare paths (orchestrator, capture)
  49: - [x] README/doc updates
  50: - [ ] CI link check and actionlint (run in validate workflow)
  51: - [ ] Self-hosted integration pass
  52: 
  53: ### Dispatcher Gating (Added)
  54: - Do not start tests if `LabVIEW.exe` is running. The dispatcher attempts a best-effort stop, waits briefly, and aborts fast if still present. This prevents hangs and surfaces a clear signal to the operator to close LabVIEW. Opt-in post-run cleanup for `LVCompare.exe` via `CLEAN_LVCOMPARE=1`.
