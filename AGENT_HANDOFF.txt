# Agent Handoff - Compare VI CLI Action

## Context Snapshot
- Standing priority refreshed via `npm run priority:sync`; GH CLI unavailable so cache points to issue #134 (`Standing priority: evolve CompareVI helper into N-provider CLI companion`).
- Working branch: `issue/134-cli-companion` (created locally; no remote configured in this container).
- LabVIEW safety toggles exported in this shell (`LV_SUPPRESS_UI=1`, `LV_NO_ACTIVATE=1`, `LV_CURSOR_RESTORE=1`, `LV_IDLE_WAIT_SECONDS=2`, `LV_IDLE_MAX_WAIT_SECONDS=5`).
- PowerShell (`pwsh`) is **not** available in this container, so LabVIEW guard/rogue scans and Pester orchestration could not execute.
- Schema validation attempted with `node dist/tools/schemas/validate-json.js --schema docs/schema/generated/teststand-compare-session.schema.json --data tests/results/teststand-session/session-index.json` â†’ command succeeded but reported `No files matched` because `tests/results/teststand-session/` is absent in this workspace.
- Captured handoff telemetry under `tests/results/_agent/handoff/test-summary.json` (`agent-handoff/test-results@v1`) summarizing the blocked commands above.
- No CLI-only or TestStand harness artifacts exist locally; reproduction will require a workspace that includes LabVIEW CLI and generated session outputs.

## Status & Known Gaps
1. PowerShell tooling is missing. All `pwsh`-based workflows (rogue detection, `Invoke-PesterTests.ps1`, harness scripts) are currently blocked.
2. TestStand session artifacts referenced in prior handoffs (`tests/results/teststand-session/session-index.json`, CLI NDJSON, reports) are not present, so schema validation and documentation updates remain outstanding.
3. Dispatcher sweep (`Invoke-PesterTests.ps1 -IntegrationMode exclude`) and targeted coverage for the TestStand harness have not run in this environment.
4. Issue/PR context for #134 still needs refreshing once artifacts/tests are regenerated (include CLI metadata, session capsule pointers, and validation status).

## Suggested Next Actions
1. Re-run the LabVIEW safety helper once `pwsh` is available: `pwsh -File tools/Print-AgentHandoff.ps1 -ApplyToggles -AutoTrim` (or at minimum `tools/Detect-RogueLV.ps1`).
2. Generate fresh CLI-only and TestStand session artifacts on a machine with LabVIEW CLI access, then copy `tests/results/cli-only/` and `tests/results/teststand-session/` back into the repo.
3. After artifacts exist, rerun the schema validator:
   - `node dist/tools/schemas/validate-json.js --schema docs/schema/generated/teststand-compare-session.schema.json --data tests/results/teststand-session/session-index.json`
4. Execute the dispatcher sweep and any targeted Pester modules once PowerShell is installed:
   - `pwsh -File Invoke-PesterTests.ps1 -IntegrationMode exclude`
   - Optionally `pwsh -File Invoke-PesterTests.ps1 -TestsPath tests/TestStand-CompareHarness.Tests.ps1`
5. Update issue/PR #134 with regenerated artifact notes, schema validation outcomes, and the refreshed handoff/test summaries.

## First Actions for the Next Agent
1. Ensure PowerShell 7+ is available; rerun `tools/Print-AgentHandoff.ps1 -ApplyToggles` (or equivalent) to capture a clean rogue scan before proceeding with LabVIEW compares.
2. Fetch or regenerate the missing `tests/results/teststand-session/` and `tests/results/cli-only/` directories so schema validation and documentation review can resume.
3. Re-run `node dist/tools/schemas/validate-json.js ...` against the restored session index and record the outcome in `tests/results/_agent/handoff/test-summary.json`.
4. Kick off `pwsh -File Invoke-PesterTests.ps1 -IntegrationMode exclude` and archive the resulting summaries (`tests/results/pester-summary.json`, XML report) for PR context.
5. Commit/push updates referencing `#127` per repo convention, ensuring handoff telemetry stays in sync.

## Notes for Next Agent
- `tests/results/_agent/handoff/test-summary.json` records today\'s blocked commands (status `blocked`, failureCount=2).
- No watcher telemetry exists for this session (container lacks prior `_agent/handoff/` assets).
- `.agent_priority_cache.json` currently reflects cached metadata for issue #134; rerun `npm run priority:sync` after installing `gh` to refresh directly from GitHub.
- Container image does not ship LabVIEW or LabVIEW CLI; expect to run compare/harness workflows on a Windows host with the required tooling.
