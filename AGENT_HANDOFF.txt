# Agent Handoff - Compare VI CLI Action

## Context Snapshot
- Running on the Windows runner; PowerShell 7.5.3 is available at `C:\Program Files\PowerShell\7\pwsh.exe`.
- Pester 5.7.1 is preinstalled and still on the PSModulePath.
- GitHub CLI 2.81.0 resides at `C:\Program Files\GitHub CLI\gh.exe` with valid `repo`, `workflow`, `gist`, `read:org` scopes.
- `node tools/npm/run-script.mjs priority:sync` ran at 2025-10-21T23:59Z; `.agent_priority_cache.json` now tracks standing issue #127 (`lastFetchSource = "live"`, digest aligned with `tests/results/_agent/issue/127.json`).
- Latest `tools/Print-AgentHandoff.ps1 -ApplyToggles -AutoTrim` execution (2025-10-21T23:59Z) confirmed watcher is idle, toggles applied, and wrote session capsule `tests/results/_agent/sessions/session-20251021T235930714Z-d625f40b6661.json`.
- `pwsh -File tools/Detect-RogueLV.ps1 -ResultsDir tests/results -LookBackSeconds 900 -AppendToStepSummary` executed at 2025-10-21T23:59Z; no rogue LVCompare/LabVIEW processes detected (JSON emitted to console only).
- `node tools/npm/run-script.mjs priority:handoff-tests` last ran 2025-10-19T15:57Z; results remain cached in `tests/results/_agent/handoff/test-summary.json`.
- Working tree on `origin/develop`; `.agent_priority_cache.json` is modified but unstaged, no commits created yet this session.

## Status & Known Gaps
1. Validation matrix drafted (`docs/plans/VALIDATION_MATRIX.md`); still needs live wiring once `tools/Start-IntegrationGated.ps1` lands.
2. VS Code tasks added (`.vscode/tasks.json`); Windows validation complete (PrePush + `Invoke-PesterTests.ps1 -IntegrationMode exclude` ~8 minâ€”CLI session hit the Codex timeout after the summary landed). Tasks now include `-DetectLeaks -KillLeaks -CleanLabVIEW -CleanAfter` for the unit sweep. Confirm parity on macOS/Linux and decide if we promote them into the docs.
3. Leak handling verified: reran the unit sweep with the new flags (LVCompare PID 33540 / LabVIEW PID 34060 in `notice-20251021-1751506366.json`), and `tools/Detect-RogueLV.ps1` reports no live processes post-run. Regression logged on #127 as resolved with the updated task.
4. Phase 1a Docker alignment verified locally: `tools/Run-NonLVChecksInDocker.ps1 -UseToolsImage -SkipDocs -SkipWorkflow -SkipMarkdown` succeeded once Docker Desktop was available (CLI build emitted `dist/comparevi-cli/*`, artifacts removed after validation). Results documented in `docs/knowledgebase/DOCKER_TOOLS_PARITY.md`; Linux automation captured via `Tools Parity (Linux)` workflow artifacts.
5. Mergeability script added (`tools/Check-PRMergeable.ps1`) so we can poll GitHub for conflicts immediately after opening a PR.
6. `priority:handoff-tests` artifacts refreshed (Oct 22). No additional action needed unless the validation flow changes.

## Suggested Next Actions
1. Exercise the new VS Code tasks on macOS/Linux (PrePush + Pester integration) and capture any shell/docker deltas.
2. Expand Docker parity coverage: rerun the helper with docs/workflow checks enabled when ready and update `docs/knowledgebase/DOCKER_TOOLS_PARITY.md` with cross-platform findings.
3. After opening/refreshing a PR, run `pwsh -File tools/Check-PRMergeable.ps1 -Number <pr> -FailOnConflict` (or wire it into CI) so merge conflicts are flagged promptly in #127.
4. Backfill the integration-gate automation (`tools/Start-IntegrationGated.ps1`) or update the validation matrix once the script is available.
5. If task wiring changes, rerun `node tools/npm/run-script.mjs priority:handoff-tests` to refresh the cache.

## First Actions for the Next Agent
1. Run `node tools/npm/run-script.mjs priority:sync` to ensure issue #127 metadata stays fresh.
2. Review `docs/plans/VALIDATION_MATRIX.md` and `.vscode/tasks.json` updates; exercise at least one task on your plane if not already covered (Windows run completed).
3. Check `tests/results/_agent/issue/router.json` for the highest-priority scripts (hooks + PrePush) and execute them if your changes touch those areas.

## Notes for Next Agent
- `SUPPRESS_PATTERN_SELFTEST` remains enforced via `tests/_helpers/DispatcherTestHelper.psm1`; keep it enabled to avoid recursion loops.
- Pester artifacts live under `tests/results/` (`pester-summary.json`, `pester-results.xml`, `pester-artifacts.json`, `pester-summary.txt`).
- Rogue LV notices: most recent is `tests/results/_lvcompare_notice/notice-20251021-0521137873.json`; earlier notices from 2025-10-20 remain for history.
- Latest session capsule: `tests/results/_agent/sessions/session-20251021T235930714Z-d625f40b6661.json`.

## Manual LabVIEW Recovery (when LV refuses to exit)
1. Run `pwsh -File tools/Detect-RogueLV.ps1 -ResultsDir tests/results -LookBackSeconds 900` to list live LVCompare/LabVIEW PIDs.
2. Attempt graceful shutdown: `pwsh -File tools/Close-LabVIEW.ps1`.
3. If PIDs remain, issue `Stop-Process -Id <pid> -Force` for each rogue entry (LVCompare first, then LabVIEW). Capture the console log for the issue thread.
4. Re-run `tools/Detect-RogueLV.ps1 -FailOnRogue` to confirm cleanup; escalate in #127 if the second sweep still reports live processes.
