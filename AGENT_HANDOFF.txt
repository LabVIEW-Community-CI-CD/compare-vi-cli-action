# Agent Handoff - Compare VI CLI Action

## Context Snapshot
- Standing priority refreshed via `npm run priority:sync`; cache still points to issue #134
  (`Standing priority: evolve CompareVI helper into N-provider CLI companion`). The sync fell back
  to cached metadata because the GitHub CLI (`gh`) is not installed.
- Working branch now synced to `issue/134-cli-companion` in this container.
- LabVIEW safety toggles exported in this shell (`LV_SUPPRESS_UI=1`, `LV_NO_ACTIVATE=1`,
  `LV_CURSOR_RESTORE=1`, `LV_IDLE_WAIT_SECONDS=2`, `LV_IDLE_MAX_WAIT_SECONDS=5`).
- PowerShell (`pwsh`) remains unavailable, so LabVIEW guard/rogue scans and Pester orchestration are
  still blocked.
- `apt-get update` cannot reach upstream mirrors in this environment (HTTP 403 responses), so
  installing PowerShell through the package manager is currently blocked.
- `npm run priority:handoff-tests` fails immediately (`pwsh: not found`), so no automated
  hook/semver coverage captured yet in this workspace.
- Re-ran `npm run priority:sync`; the run still falls back to the cached standing-issue metadata
  because `gh` is unavailable in the container.
- A placeholder TestStand session folder (`tests/results/teststand-session/`) now exists; it currently
  mirrors the committed fixture so schema validation commands can execute, but it still needs to be
  replaced with freshly captured artifacts from a real run.
- Schema validation re-run with the placeholder data via `node dist/tools/schemas/validate-json.js
  --schema docs/schema/generated/teststand-compare-session.schema.json --data
  tests/results/teststand-session/session-index.json`; command succeeds locally (latest run
  timestamped 2025-10-16T00:27Z).
- Updated handoff telemetry recorded in `tests/results/_agent/handoff/test-summary.json`
  (`agent-handoff/test-results@v1`) capturing the blocked handoff script, schema attempt, apt
  failure details, and the latest `npm run priority:sync` rerun (still limited to cached metadata
  because `gh` is unavailable).

## Status & Known Gaps
1. PowerShell tooling is still missing. All `pwsh`-based workflows (rogue detection,
   `Invoke-PesterTests.ps1`, priority handoff script) remain blocked until PowerShell is installed.
2. Package installation is currently blocked by outbound HTTP 403 errors from Ubuntu mirrors
   (`apt-get update` fails), so resolving the PowerShell gap may require alternate distribution
   channels or proxy configuration.
3. TestStand session artifacts (`tests/results/teststand-session/session-index.json`) and CLI-only
   outputs are absent, so schema validation and related documentation cannot progress yet.
4. Dispatcher sweep (`Invoke-PesterTests.ps1 -IntegrationMode exclude`) and targeted TestStand
   harness coverage have not run in this environment.
5. Issue/PR context for #134 still needs refreshed notes once artifacts/tests are regenerated
   (include CLI metadata, session capsules, validation status).

## Suggested Next Actions
1. Restore package manager access or obtain an offline installer so PowerShell 7+ can be installed.
   Once available, re-run the LabVIEW safety helper: `pwsh -File tools/Print-AgentHandoff.ps1
   -ApplyToggles -AutoTrim` (or at minimum `tools/Detect-RogueLV.ps1`).
2. Generate or copy fresh CLI-only and TestStand session artifacts on a host with LabVIEW CLI
   access; replace the placeholder content under `tests/results/teststand-session/` and populate the
   missing `tests/results/cli-only/` directory locally.
3. Re-run the schema validator once real artifacts exist:
   ```
   node dist/tools/schemas/validate-json.js \
     --schema docs/schema/generated/teststand-compare-session.schema.json \
     --data tests/results/teststand-session/session-index.json
   ```
4. Execute dispatcher coverage once PowerShell is available:
   - `pwsh -File Invoke-PesterTests.ps1 -IntegrationMode exclude`
   - Optionally `pwsh -File Invoke-PesterTests.ps1 -TestsPath tests/TestStand-CompareHarness.Tests.ps1`
5. Update issue/PR #134 with regenerated artifact notes, schema validation outcomes (call out when
   placeholder data is replaced), and refreshed handoff/test summaries once tooling and artifacts are
   restored.

## First Actions for the Next Agent
1. Restore package manager connectivity (or provide an alternative installer) so PowerShell 7+
   is available, then rerun `tools/Print-AgentHandoff.ps1 -ApplyToggles` (or equivalent) to capture
   a clean rogue scan before proceeding with LabVIEW compares.
2. Fetch or regenerate the missing `tests/results/teststand-session/` and `tests/results/cli-only/`
   directories so schema validation and documentation review can resume; replace the current
   placeholder TestStand session copy with genuine output.
3. Re-run `node dist/tools/schemas/validate-json.js ...` against the restored session index and
   record the outcome in `tests/results/_agent/handoff/test-summary.json` (note when placeholder data
   gets swapped out).
4. Kick off `pwsh -File Invoke-PesterTests.ps1 -IntegrationMode exclude` and archive the resulting
   summaries (`tests/results/pester-summary.json`, XML report) for PR context once PowerShell is
   operational.
5. Commit/push updates referencing `#127` per repo convention, ensuring handoff telemetry stays in
   sync.

## Notes for Next Agent
- `tests/results/_agent/handoff/test-summary.json` now records `npm run priority:handoff-tests`
  (blocked: `pwsh` missing), the schema validation attempt (no matching data files), the failed
  `apt-get update` (HTTP 403), and the successful `npm run priority:sync` rerun (still backed by the
  cached standing-priority snapshot).
- No watcher telemetry exists for this session; container still lacks `_agent/handoff/` watcher
  assets.
- `.agent_priority_cache.json` currently reflects cached metadata for issue #134; rerun
  `npm run priority:sync` after installing `gh` to refresh directly from GitHub.
- Container image does not ship LabVIEW or LabVIEW CLI; expect to run compare/harness workflows on a
  Windows host with the required tooling.
- `tests/results/_agent/handoff/test-summary.json` refreshed at 2025-10-16T00:28Z to log the latest
  `npm run priority:sync` rerun and the additional schema validation check (still referencing the
  placeholder TestStand session data).
