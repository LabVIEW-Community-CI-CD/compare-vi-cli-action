# Agent Handoff - Compare VI CLI Action

## Context Snapshot
- Installed PowerShell 7.5.0 from the upstream GitHub tarball (`/opt/microsoft/powershell/7/pwsh`) and
  symlinked `/usr/bin/pwsh`.
- Installed Pester 5.5.0 into `~/.local/share/powershell/Modules/Pester/5.5.0`; `Get-Module Pester` now
  reports 5.5.0.
- Downloaded GitHub CLI 2.45.0 to `/usr/local/bin/gh` (still unauthenticated).
- `node tools/npm/run-script.mjs priority:sync` still falls back to cached #134 metadata because the REST
  fallback returns HTTP 401 without credentials.
- `pwsh -File tools/Detect-RogueLV.ps1 -ResultsDir tests/results -LookBackSeconds 900 -AppendToStepSummary`
  reported no rogue LVCompare/LabVIEW processes and refreshed
  `tests/results/_lvcompare_notice/notice-*.json`.
- Attempted `pwsh -File Invoke-PesterTests.ps1 -IntegrationMode exclude` (logs in `/tmp/pester.log`); after
  ~8 minutes the dispatcher spawned a runaway `pwsh` chain inside the IncludePatterns tests
  (`Invoke-PesterTests.Patterns.Tests.ps1` kept relaunching the dispatcher). Terminated PID 5349 to stop the
  recursion.
- The guard dropped `tests/results/_diagnostics/guard.json` pointing to a temporary
  `/tmp/.../blocked-results.txt` during the recursion attempt.
- Working tree remains on branch `work`; no commits created yet.

## Status & Known Gaps
1. GitHub CLI is present but unauthenticated, so `priority:sync` continues to rely on cached #134 data.
2. Dispatcher run (`Invoke-PesterTests.ps1 -IntegrationMode exclude`) still has no clean completion because
   the IncludePatterns test recursively spawns new dispatcher instances. `pester-summary.json`/NUnit output
   were not produced.
3. `/tmp/pester.log` plus `tests/results/_diagnostics/guard.json` document the recursion/guard failure and
   should be cleared or relocated before the next dispatcher attempt.
4. Issue/PR #134 still needs an update summarising the restored toolchain, rogue sweep, and the
   dispatcher recursion findings.

## Suggested Next Actions
1. Authenticate GitHub CLI (`gh auth login` or export `GH_TOKEN`) and rerun `priority:sync` so the standing
   priority cache refreshes from live data.
2. Investigate and patch the IncludePatterns recursion (likely in `Invoke-PesterTests.Patterns.Tests.ps1` or
   dispatcher selection logic) so `Invoke-PesterTests.ps1 -IntegrationMode exclude` can finish without
   runaway child `pwsh` processes.
3. Once the recursion fix lands, rerun the dispatcher to completion and collect the usual artifacts
   (`pester-summary.json`, NUnit XML, watcher telemetry, leaks report).
4. Post a status update to issue/PR #134 covering the toolchain installs, rogue sweep outcome, and the
   dispatcher recursion investigation.
5. Continue the rogue LVCompare sweep cadence with `tools/Detect-RogueLV.ps1` now that PowerShell/Pester are
   available locally.

## First Actions for the Next Agent
1. Provide GitHub credentials and ensure `node tools/npm/run-script.mjs priority:sync` succeeds against live
   GitHub data.
2. Reproduce and resolve the IncludePatterns-driven recursion so the dispatcher completes a normal run.
3. After the fix, execute `Invoke-PesterTests.ps1 -IntegrationMode exclude` to completion and capture its
   results artifacts.
4. Update issue/PR #134 with the toolchain status, rogue sweep confirmation, and dispatcher progress.

## Notes for Next Agent
- PowerShell 7.5.0: `/opt/microsoft/powershell/7/pwsh` (symlinked at `/usr/bin/pwsh`).
- Pester 5.5.0: `~/.local/share/powershell/Modules/Pester/5.5.0`.
- GitHub CLI 2.45.0: `/usr/local/bin/gh` (requires `gh auth login` or `GH_TOKEN`).
- Latest `priority:sync` ended with `Failed to fetch issue #134 via gh CLI (HTTP 401: Bad credentials
  (https://api.github.com/graphql)...)`.
- `Invoke-PesterTests.ps1 -IntegrationMode exclude` currently spins up nested `pwsh` processes via the
  IncludePatterns tests; see `/tmp/pester.log` and `ps -ef --forest` for context. Guard crumb at
  `tests/results/_diagnostics/guard.json` captures the failure path.
- Rogue sweep ran at `2025-10-16T20:17:16Z`; notices live under `tests/results/_lvcompare_notice/` and no
  rogue processes were detected.
