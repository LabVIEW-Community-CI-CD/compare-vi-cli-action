# Agent Handoff - Compare VI CLI Action

## Context Snapshot
- Ran `node tools/npm/run-script.mjs priority:sync` at session start; the helper again fell back to the
  cached metadata for standing issue #134 because GitHub CLI is still missing and unauthenticated REST
  calls fail. The cache timestamp now reflects this session (`cachedAtUtc` â‰ˆ 2025-10-16T18:53:50Z).
- Confirmed `gh` remains absent on this image (`which gh` yields no path), so we cannot reauthenticate
  or pull fresh issue data until the binary is installed or a `GH_TOKEN` is supplied.
- `gh auth status` is still blocked because the executable is unavailable; unauthenticated REST calls
  continue to fail with `fetch failed`.
- PowerShell (`pwsh`) remains missing (`pwsh --version` exits with `command not found`). A prior
  `apt-get install powershell` attempt on this image also failed because the package is not published in
  the default Ubuntu repositories, so dispatcher and guard automation are still offline pending a
  Microsoft feed or manual install path.
- Working tree remains on branch `work`; no topic branch (for example `issue/134-cli-companion`) exists
  locally, and no new commits were created during this session beyond cache refresh updates.
- No orchestrated dispatcher, guard, or watcher tooling ran, so `tests/results/_agent/` still only
  contains the previously published telemetry. The earlier `tests/results/_diagnostics/guard.json`
  artifact is still absent.
- Placeholder CLI-only and TestStand artifacts remain unchanged; nothing new was captured from a
  LabVIEW-capable host.

## Status & Known Gaps
1. GitHub CLI is absent. Priority syncs cannot reach GitHub until `gh` is installed and authenticated
   or an equivalent token-backed REST workflow is configured.
2. PowerShell 7 + Pester are still missing, so dispatcher and guard diagnostics remain blocked.
3. Dispatcher coverage has not been rerun since before the CLI removal; the prior guard failure
   scenario is still unverified with current bits.
4. TestStand and CLI-only session payloads are still placeholders rather than validated LabVIEW
   outputs produced on real hardware.
5. Issue/PR #134 has not been refreshed with notes covering the missing toolchain, dispatcher status,
   or artifact provenance from recent sessions.

## Suggested Next Actions
1. Install GitHub CLI and authenticate (`gh auth login` or provide `GH_TOKEN`), then rerun
   `node tools/npm/run-script.mjs priority:sync` so `.agent_priority_cache.json` carries live metadata.
2. Install PowerShell 7 + Pester from the Microsoft feed or an offline package so dispatcher and guard
   automation can resume.
3. Once PowerShell is available, rerun the dispatcher with guard diagnostics enabled (for example,
   `pwsh -File Invoke-PesterTests.ps1 -IntegrationMode exclude`) to recreate the previous loop and
   capture fresh artifacts.
4. Produce real CLI-only and TestStand session artifacts on a LabVIEW-capable Windows host and validate
   them with the schema tooling before checking them in.
5. Update issue/PR #134 after restoring the toolchain to document the new dispatcher runs, schema
   outcomes, and remaining gaps.

## First Actions for the Next Agent
1. Restore GitHub CLI access (install + authenticate) and rerun the standing-priority sync to refresh
   cached metadata.
2. Enable PowerShell 7 + Pester and validate dispatcher/guard workflows so we can continue debugging the
   standing issue.
3. Replace the placeholder CLI/TestStand payloads with validated outputs from a LabVIEW-capable host and
   document the provenance.
4. Record any new dispatcher, schema, or watcher telemetry in this handoff log and update issue/PR #134
   accordingly.

## Notes for Next Agent
- `node tools/npm/run-script.mjs priority:sync` continues to fail without GitHub CLI or credentials; the
  cached metadata was last refreshed at 2025-10-16T18:53:50Z with the "gh CLI not found" error.
- `tests/results/_agent/handoff/test-summary.json` still reflects the 2025-10-16T15:48Z
  `priority:handoff-tests` run; no follow-up validation was executed.
- Watcher telemetry remains unchanged; `_agent/handoff/` contains no new watcher artifacts for this
  session.
- `.agent_priority_cache.json` records the latest failure reason (`gh CLI not found`) from the
  2025-10-16T18:53:50Z sync and has not been manually edited.
- The container still lacks LabVIEW/LVCompare, so genuine Compare VI outputs must be harvested from a
  Windows host with those tools available.
