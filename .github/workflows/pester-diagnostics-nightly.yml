name: Pester diagnostics nightly

on:
  schedule:
    - cron: '0 7 * * *' # 07:00 UTC daily
  workflow_dispatch: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  diagnostics:
    runs-on: [self-hosted, Windows, X64]
    timeout-minutes: 3
    env:
      ENABLE_DIAGNOSTIC_FAIL: 1
    steps:
      - uses: actions/checkout@v5

      - name: Run dispatcher with synthetic failure enabled (continue-on-error)
        id: run
        shell: pwsh
        continue-on-error: true
        run: |
          ./Invoke-PesterTests.ps1 -TestsPath tests -IncludeIntegration false -ResultsPath tests/results
          echo "exit_code=$LASTEXITCODE" >> $env:GITHUB_OUTPUT

      - name: Verify failure JSON emitted
        if: always()
        shell: pwsh
        run: |
          $failPath = 'tests/results/pester-failures.json'
          if (-not (Test-Path $failPath)) { Write-Host '::warning::Failure JSON not generated'; exit 0 }
          $fail = Get-Content $failPath -Raw | ConvertFrom-Json
          if (-not $fail -or $fail.Count -lt 1) { Write-Host '::warning::Failure JSON empty' } else { Write-Host "Detected $($fail.Count) synthetic failing test(s)." }
          $summary = Join-Path 'tests/results' 'pester-summary.json'
          if (Test-Path $summary) {
            $data = Get-Content $summary -Raw | ConvertFrom-Json
            $block = @(
              '### Nightly Diagnostics (Synthetic Failure)',
              "- Total: $($data.total)",
              "- Passed: $($data.passed)",
              "- Failed: $($data.failed)",
              "- Duration (s): $($data.duration_s)"
            ) -join [Environment]::NewLine
            $block | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append -Encoding utf8
          }

      - name: Upload diagnostics artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pester-diagnostics-nightly
          path: |
            tests/results/pester-summary.json
            tests/results/pester-failures.json
            tests/results/pester-results.xml
            tests/results/pester-summary.txt
          if-no-files-found: warn

      - name: Validate session index schema (schema-lite)
        if: always()
        shell: pwsh
        run: |
          $idx = 'tests/results/session-index.json'
          if (Test-Path $idx) {
            pwsh -File tools/Invoke-JsonSchemaLite.ps1 -JsonPath $idx -SchemaPath docs/schemas/session-index-v1.schema.json
            if ($LASTEXITCODE -ne 0) { Write-Host "Session index schema-lite returned code $LASTEXITCODE" }
          } else {
            Write-Host '::notice::session-index.json not present in nightly diagnostics run.'
          }

      - name: Mark workflow success regardless of test exit
        if: always()
        shell: pwsh
        run: |
          Write-Host "Dispatcher exit code: ${{ steps.run.outputs.exit_code }} (ignored for nightly diagnostics)"
