name: CI Orchestrated (deterministic chain)

on:
  workflow_dispatch:
    inputs:
      include_integration:
        description: 'Include Integration-tagged tests'
        required: false
        default: 'true'
        type: choice
        options: ['true','false']

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Install actionlint
        run: |
          mkdir -p ./bin
          curl -sSL https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash | bash -s -- latest ./bin

      - name: Run actionlint
        run: |
          ./bin/actionlint -color

      - name: Install markdownlint-cli
        run: |
          npm install -g markdownlint-cli

      - name: Run markdownlint (non-blocking)
        continue-on-error: true
        run: |
          markdownlint "**/*.md" --ignore node_modules

  preflight:
    runs-on: [self-hosted, Windows, X64]
    timeout-minutes: 3
    steps:
      - uses: actions/checkout@v5
      - name: Verify LVCompare and idle LabVIEW state
        shell: pwsh
        run: |
          $cli = 'C:\\Program Files\\National Instruments\\Shared\\LabVIEW Compare\\LVCompare.exe'
          if (-not (Test-Path -LiteralPath $cli)) {
            Write-Host "::error::LVCompare.exe not found at canonical path: $cli"; exit 1
          }
          $lv = Get-Process -Name 'LabVIEW' -ErrorAction SilentlyContinue
          if ($lv) { Write-Host "::error::LabVIEW.exe is running (PID(s): $($lv.Id -join ','))"; exit 1 }
          Write-Host 'Preflight OK: LVCompare present; LabVIEW not running.'

  pester:
    runs-on: [self-hosted, Windows, X64]
    timeout-minutes: 3
    needs: [preflight]
    env:
      LV_BASE_VI: ${{ vars.LV_BASE_VI }}
      LV_HEAD_VI: ${{ vars.LV_HEAD_VI }}
      DETECT_LEAKS: '1'
      CLEAN_AFTER: '1'
      SCAN_ARTIFACTS: '1'
      UNBLOCK_GUARD: '1'
      LV_SUPPRESS_UI: '1'
      WATCH_CONSOLE: '1'
    steps:
      - uses: actions/checkout@v5
      - name: Run Pester tests via local dispatcher
        shell: pwsh
        run: |
          ./Invoke-PesterTests.ps1 -TestsPath tests -IncludeIntegration '${{ inputs.include_integration }}' -ResultsPath tests/results

      - name: Ensure session index (fallback)
        if: always()
        shell: pwsh
        run: pwsh -File tools/Ensure-SessionIndex.ps1 -ResultsDir 'tests/results' -SummaryJson 'pester-summary.json'

      - name: Session index post
        if: always()
        uses: ./.github/actions/session-index-post
        with:
          results-dir: tests/results
          validate-schema: true
          upload: true
          artifact-name: session-index

      - name: Upload Pester artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: orchestrated-pester-results
          path: |
            tests/results/**/*.xml
            tests/results/**/*.txt
            tests/results/pester-summary.json
            tests/results/pester-failures.json
            tests/results/session-index.json

      - name: Runner Unblock Guard
        if: always()
        uses: ./.github/actions/runner-unblock-guard
        with:
          snapshot-path: tests/results/runner-unblock-snapshot.json
          cleanup: ${{ env.UNBLOCK_GUARD == '1' }}
          process-names: 'conhost,pwsh,LabVIEW,LVCompare'

  drift:
    runs-on: [self-hosted, Windows, X64]
    timeout-minutes: 3
    needs: [pester]
    env:
      UNBLOCK_GUARD: '1'
      LV_SUPPRESS_UI: '1'
      WATCH_CONSOLE: '1'
    steps:
      - uses: actions/checkout@v5
      - name: Fixture Drift Orchestrator
        uses: ./.github/actions/fixture-drift
        with:
          render-report: 'true'
          comment-on-fail: 'true'
          upload-artifacts: 'true'
          artifact-name: orchestrated-fixture-drift

      - name: Session index post (best-effort)
        if: always()
        uses: ./.github/actions/session-index-post
        with:
          results-dir: results/fixture-drift
          validate-schema: true
          upload: true
          artifact-name: fixture-drift-session-index

      - name: Runner Unblock Guard
        if: always()
        uses: ./.github/actions/runner-unblock-guard
        with:
          snapshot-path: results/fixture-drift/runner-unblock-snapshot.json
          cleanup: ${{ env.UNBLOCK_GUARD == '1' }}
          process-names: 'conhost,pwsh,LabVIEW,LVCompare'

  publish:
    runs-on: ubuntu-latest
    needs: [lint, pester, drift]
    if: always()
    steps:
      - uses: actions/checkout@v5
      - name: Summarize orchestrated run
        shell: pwsh
        run: |
          $lines = @(
            '### CI Orchestrated Summary',
            '- Lint: ${{ needs.lint.result }}',
            '- Pester: ${{ needs.pester.result }}',
            '- Drift: ${{ needs.drift.result }}'
          ) -join "`n"
          $lines | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append -Encoding utf8
