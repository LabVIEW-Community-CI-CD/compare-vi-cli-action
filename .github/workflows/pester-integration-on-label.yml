name: Pester integration tests on PR label

on:
  pull_request:
    types: [labeled, reopened, synchronize]
  workflow_dispatch: {}

jobs:
  pester-integration:
    if: contains(toJson(github.event.pull_request.labels), 'test-integration')
    runs-on: [self-hosted, Windows, X64]
    env:
      LV_BASE_VI: ${{ vars.LV_BASE_VI }}
      LV_HEAD_VI: ${{ vars.LV_HEAD_VI }}
    steps:
      - uses: actions/checkout@v5

      - name: Install Pester v5
        shell: pwsh
        run: |
          Install-Module -Name Pester -RequiredVersion 5.4.0 -Force -SkipPublisherCheck -Scope CurrentUser

      - name: Run Pester integration tests
        shell: pwsh
        run: |
          ./tools/Run-Pester.ps1 -IncludeIntegration

      - name: Upload Pester artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pester-integration-results
          path: |
            tests/results/**/*.xml
            tests/results/**/*.txt

      - name: Comment results on PR (using XCLI_PAT)
        if: always()
        shell: pwsh
        env:
          GH_REPO: ${{ github.repository }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          XCLI_PAT: ${{ secrets.XCLI_PAT }}
        run: |
          if (-not $env:XCLI_PAT) { Write-Host 'XCLI_PAT not available; skipping comment.'; exit 0 }
          $summaryPath = './tests/results/pester-summary.txt'
          if (Test-Path $summaryPath) {
            $summary = Get-Content $summaryPath -Raw
          } else {
            $summary = 'Results not available'
          }
          $lines = @(
            '### Pester integration test results (label-triggered)',
            '',
            '```',
            $summary,
            '```'
          ) -join "`n"
          $payload = @{ body = $lines } | ConvertTo-Json -Compress
          $headers = @{ Authorization = "Bearer $env:XCLI_PAT"; Accept = 'application/vnd.github+json'; 'User-Agent' = 'xcli-bot' }
          $uri = "https://api.github.com/repos/$env:GH_REPO/issues/$env:PR_NUMBER/comments"
          Invoke-RestMethod -Method POST -Uri $uri -Headers $headers -ContentType 'application/json' -Body $payload
