name: Pester integration tests on PR label

on:
  pull_request:
    types: [labeled, reopened, synchronize]
    paths-ignore:
      - '**/*.md'
  workflow_dispatch:
    inputs:
      sample_id:
        description: 'Sampling correlation id (prevents cancels)'
        required: false
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.event.inputs.sample_id || github.ref }}
  cancel-in-progress: true

jobs:
  pre-init:
    runs-on: ubuntu-latest
    outputs:
      docs_only: ${{ steps.d.outputs.normalized }}
    steps:
      - uses: actions/checkout@v5
      - name: Detect docs-only change
        id: detect
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Continue'
          $docsOnly = 'false'
          if ('${{ github.event_name }}' -eq 'pull_request') {
            $ownerRepo = '${{ github.repository }}'
            $pr = '${{ github.event.pull_request.number }}'
            $uri = "https://api.github.com/repos/$ownerRepo/pulls/$pr/files"
            $headers = @{ Authorization = "Bearer $env:GITHUB_TOKEN"; 'X-GitHub-Api-Version' = '2022-11-28'; Accept='application/vnd.github+json' }
            try {
              $files = Invoke-RestMethod -Method Get -Uri $uri -Headers $headers -ErrorAction Stop
              $names = @($files | ForEach-Object { $_.filename })
              if ($names.Count -gt 0) {
                $isDocs = $true
                foreach ($n in $names) {
                  $inDocs = ($n -like 'docs/**' -or $n -like '**/*.md')
                  $isSchema = ($n -like 'docs/schemas/**')
                  if (-not $inDocs -or $isSchema) { $isDocs = $false; break }
                }
                if ($isDocs) { $docsOnly = 'true' }
              }
            } catch { Write-Host '::notice::Docs-only detection skipped; treating as non-docs.' }
          }
          "docs_only=$docsOnly" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8
      - name: Normalize docs-only
        id: d
        uses: ./.github/actions/bool-normalize
        with:
          value: ${{ steps.detect.outputs.docs_only || 'false' }}

  pester-integration:
    if: (contains(github.event.pull_request.labels.*.name, 'test-integration') || github.event_name == 'workflow_dispatch') && needs.pre-init.outputs.docs_only != 'true'
    needs: pre-init
    uses: ./.github/workflows/pester-reusable.yml
    with:
      include_integration: ${{ 'true' }}
      install_pester: ${{ 'false' }}
      sample_id: ${{ github.event.inputs.sample_id || '' }}

  integration-docs-only:
    needs: pre-init
    if: contains(github.event.pull_request.labels.*.name, 'test-integration') && needs.pre-init.outputs.docs_only == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Append summary (docs-only)
        shell: pwsh
        run: |
          if ($env:GITHUB_STEP_SUMMARY) {
            $lines = @('### Pester Integration (soft-skip)','')
            $lines += '- Reason: docs-only change detected'
            $lines -join "`n" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append -Encoding utf8
          }
