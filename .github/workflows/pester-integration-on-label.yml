name: Pester integration tests on PR label

on:
  pull_request:
    types: [labeled, reopened, synchronize]
  workflow_dispatch: {}

jobs:
  pester-integration:
    if: contains(github.event.pull_request.labels.*.name, 'test-integration')
    runs-on: [self-hosted, Windows, X64]
    env:
      LV_BASE_VI: ${{ vars.LV_BASE_VI }}
      LV_HEAD_VI: ${{ vars.LV_HEAD_VI }}
    steps:
      - uses: actions/checkout@v5

      - name: Validate environment
        shell: pwsh
        run: |
          $errors = @()
          
          # Check for LabVIEW Compare CLI
          $cliPath = 'C:\Program Files\National Instruments\Shared\LabVIEW Compare\LVCompare.exe'
          if (-not (Test-Path -LiteralPath $cliPath)) {
            $errors += "LVCompare.exe not found at canonical path: $cliPath"
            $errors += "Install LabVIEW 2025 Q3 or later with LabVIEW Compare CLI"
          }
          
          # Check for environment variables
          if (-not $env:LV_BASE_VI) {
            $errors += "LV_BASE_VI environment variable not set"
            $errors += "Set repository variable LV_BASE_VI in Settings -> Secrets and variables -> Actions -> Variables"
          } elseif (-not (Test-Path -LiteralPath $env:LV_BASE_VI)) {
            $errors += "LV_BASE_VI points to non-existent file: $env:LV_BASE_VI"
          }
          
          if (-not $env:LV_HEAD_VI) {
            $errors += "LV_HEAD_VI environment variable not set"
            $errors += "Set repository variable LV_HEAD_VI in Settings -> Secrets and variables -> Actions -> Variables"
          } elseif (-not (Test-Path -LiteralPath $env:LV_HEAD_VI)) {
            $errors += "LV_HEAD_VI points to non-existent file: $env:LV_HEAD_VI"
          }
          
          if ($errors.Count -gt 0) {
            Write-Host "Environment validation failed:"
            $errors | ForEach-Object { Write-Host "  - $_" }
            Write-Host ""
            Write-Host "See docs/SELFHOSTED_CI_SETUP.md for setup instructions"
            exit 1
          }
          
          Write-Host "Environment validation passed:"
          Write-Host "  - CLI: $cliPath"
          Write-Host "  - LV_BASE_VI: $env:LV_BASE_VI"
          Write-Host "  - LV_HEAD_VI: $env:LV_HEAD_VI"

      - name: Install Pester v5
        shell: pwsh
        run: |
          Install-Module -Name Pester -RequiredVersion 5.4.0 -Force -SkipPublisherCheck -Scope CurrentUser

      - name: Run Pester integration tests
        shell: pwsh
        run: |
          ./tools/Run-Pester.ps1 -IncludeIntegration

      - name: Upload Pester artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pester-integration-results
          path: |
            tests/results/**/*.xml
            tests/results/**/*.txt

      - name: Comment results on PR (using XCLI_PAT)
        if: always()
        shell: pwsh
        env:
          GH_REPO: ${{ github.repository }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          XCLI_PAT: ${{ secrets.XCLI_PAT }}
        run: |
          if (-not $env:XCLI_PAT) { Write-Host 'XCLI_PAT not available; skipping comment.'; exit 0 }
          $summaryPath = './tests/results/pester-summary.txt'
          if (Test-Path $summaryPath) {
            $summary = Get-Content $summaryPath -Raw
          } else {
            $summary = 'Results not available'
          }
          $lines = @(
            '### Pester integration test results (label-triggered)',
            '',
            '```',
            $summary,
            '```'
          ) -join "`n"
          $payload = @{ body = $lines } | ConvertTo-Json -Compress
          $headers = @{ Authorization = "Bearer $env:XCLI_PAT"; Accept = 'application/vnd.github+json'; 'User-Agent' = 'xcli-bot' }
          $uri = "https://api.github.com/repos/$env:GH_REPO/issues/$env:PR_NUMBER/comments"
          Invoke-RestMethod -Method POST -Uri $uri -Headers $headers -ContentType 'application/json' -Body $payload
