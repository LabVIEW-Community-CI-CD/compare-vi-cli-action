name: VI Binary Handling Gate
on:
  pull_request:
    paths:
      - '.gitattributes'
      - 'scripts/**'
      - 'tests/ViBinaryHandling.Tests.ps1'
  push:
    branches: [ main ]
    paths:
      - '.gitattributes'
      - 'scripts/**'
      - 'tests/ViBinaryHandling.Tests.ps1'

jobs:
  pre-init:
    runs-on: ubuntu-latest
    outputs:
      docs_only: ${{ steps.g.outputs.docs_only }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - id: g
        uses: ./.github/actions/pre-init-gate
        with:
          include-globs: |
            docs/**
            **/*.md
          exclude-globs: |
            docs/schemas/**
          fail-on-fork: 'true'
          repo-owner-expected: ${{ vars.EXPECTED_REPO_OWNER || 'LabVIEW-Community-CI-CD' }}
  vi-binary-check:
    runs-on: [self-hosted, Windows, X64]
    needs: pre-init
    if: needs.pre-init.outputs.docs_only != 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install Pester (if needed)
        shell: pwsh
        run: |
          if (-not (Get-Module -ListAvailable Pester | Where-Object Version -ge '5.0.0')) {
            # Ensure PSGallery is trusted to avoid interactive prompts on self-hosted runners
            try { Set-PSRepository -Name 'PSGallery' -InstallationPolicy Trusted -ErrorAction SilentlyContinue } catch {}
            # Install without publisher prompt
            Install-Module -Name Pester -RequiredVersion 5.4.0 -Force -SkipPublisherCheck -Scope CurrentUser -Confirm:$false
          }

      - name: Run VI binary handling test
        shell: pwsh
        run: |
          $config = New-PesterConfiguration
          $config.Run.Path = 'tests/ViBinaryHandling.Tests.ps1'
          $config.Output.Verbosity = 'Normal'
          Invoke-Pester -Configuration $config

      - name: Upload test artifacts (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: vi-binary-gate-logs
          path: .
