name: Integration Runbook Validation

on:
  workflow_dispatch:
  push:
    branches:
      - develop
      - release/**

jobs:
  runbook-check:
    if: ${{ !startsWith(github.ref, 'refs/tags/') }}
    runs-on: [self-hosted, Windows, X64]
    timeout-minutes: 3
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PowerShell Core
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
        # (Using setup-python only to ensure UTF-8 locale; PowerShell 7 available by default on windows-latest.)

      - name: Run Runbook Core Phases (non-interactive)
        shell: pwsh
        run: |
          pwsh -NoLogo -NoProfile -NonInteractive -File scripts/Invoke-IntegrationRunbook.ps1 -Phases Prereqs,CanonicalCli,ViInputs -JsonReport runbook-ci.json -PassThru | Out-Null
          Get-Content runbook-ci.json

      - name: Upload Runbook Artifact
        uses: actions/upload-artifact@v4
        with:
          name: integration-runbook-result
          path: runbook-ci.json

      - name: Validate JSON Schema (basic)
        shell: pwsh
        run: |
          $json = Get-Content runbook-ci.json -Raw | ConvertFrom-Json
          if ($json.schema -ne 'integration-runbook-v1') { throw 'Schema mismatch' }
          if (-not $json.phases) { throw 'No phases in runbook output' }

      - name: Runner Unblock Guard (post)
        if: always()
        uses: ./.github/actions/runner-unblock-guard
        with:
          snapshot-path: tests/results/runner-unblock-snapshot.json
          cleanup: ${{ env.UNBLOCK_GUARD == '1' }}
          process-names: 'conhost,pwsh,LabVIEW,LVCompare'
