name: Fixture Drift Validation

on:
  pull_request:
    paths:
      - 'fixtures.manifest.json'
      - 'VI*.vi'
      - 'scripts/**'
      - 'tools/**'
      - 'docs/schemas/**'
  workflow_dispatch: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  preflight-windows:
    name: Preflight (Windows)
    runs-on: [self-hosted, Windows, X64]
    timeout-minutes: 3
    steps:
      - uses: actions/checkout@v4
      - name: Verify LVCompare and idle LabVIEW state
        shell: pwsh
        run: |
          $cli = 'C:\\Program Files\\National Instruments\\Shared\\LabVIEW Compare\\LVCompare.exe'
          if (-not (Test-Path -LiteralPath $cli)) {
            Write-Host "::error::LVCompare.exe not found at canonical path: $cli"; exit 1
          }
          $lv = Get-Process -Name 'LabVIEW' -ErrorAction SilentlyContinue
          if ($lv) {
            Write-Host "::error::LabVIEW.exe is running (PID(s): $($lv.Id -join ',')). Refusing to start tests."; exit 1
          }
          Write-Host 'Preflight OK: LVCompare present; LabVIEW not running.'
  validate-ubuntu:
    name: Fixture Drift (Ubuntu)
    runs-on: ubuntu-latest
    timeout-minutes: 3
    permissions:
      actions: read
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect docs-only change
        id: docs
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $docsOnly = 'false'
          if ('${{ github.event_name }}' -eq 'pull_request') {
            $ownerRepo = '${{ github.repository }}'
            $pr = '${{ github.event.pull_request.number }}'
            $uri = "https://api.github.com/repos/$ownerRepo/pulls/$pr/files"
            $headers = @{ Authorization = "Bearer $env:GITHUB_TOKEN"; 'X-GitHub-Api-Version' = '2022-11-28'; Accept='application/vnd.github+json' }
            $files = Invoke-RestMethod -Method Get -Uri $uri -Headers $headers
            $names = @($files | ForEach-Object { $_.filename })
            if ($names.Count -gt 0) {
              $isDocs = $true
              foreach ($n in $names) {
                $inDocs = ($n -like 'docs/**' -or $n -like '**/*.md')
                $isSchema = ($n -like 'docs/schemas/**')
                if (-not $inDocs -or $isSchema) { $isDocs = $false; break }
              }
              if ($isDocs) { $docsOnly = 'true' }
            }
          }
          "docs_only=$docsOnly" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8

      - name: Fixture Drift Orchestrator
        uses: ./.github/actions/fixture-drift
        with:
          render-report: 'false'
          comment-on-fail: 'true'
          upload-artifacts: 'true'
          artifact-name: fixture-drift-ubuntu
          soft-fail: ${{ steps.docs.outputs.docs_only }}

  validate-windows:
    name: Fixture Drift (Windows)
    runs-on: [self-hosted, Windows, X64]
    needs: preflight-windows
    timeout-minutes: 3
    env:
      UNBLOCK_GUARD: '1'
      LV_SUPPRESS_UI: '1'
      WATCH_CONSOLE: '1'
    permissions:
      actions: read
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect docs-only change
        id: docs
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $docsOnly = 'false'
          if ('${{ github.event_name }}' -eq 'pull_request') {
            $ownerRepo = '${{ github.repository }}'
            $pr = '${{ github.event.pull_request.number }}'
            $uri = "https://api.github.com/repos/$ownerRepo/pulls/$pr/files"
            $headers = @{ Authorization = "Bearer $env:GITHUB_TOKEN"; 'X-GitHub-Api-Version' = '2022-11-28'; Accept='application/vnd.github+json' }
            $files = Invoke-RestMethod -Method Get -Uri $uri -Headers $headers
            $names = @($files | ForEach-Object { $_.filename })
            if ($names.Count -gt 0) {
              $isDocs = $true
              foreach ($n in $names) {
                $inDocs = ($n -like 'docs/**' -or $n -like '**/*.md')
                $isSchema = ($n -like 'docs/schemas/**')
                if (-not $inDocs -or $isSchema) { $isDocs = $false; break }
              }
              if ($isDocs) { $docsOnly = 'true' }
            }
          }
          "docs_only=$docsOnly" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8

      - name: Prepare fixture copies (base/head)
        id: prep
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $tmp = Join-Path $env:RUNNER_TEMP ("fixtures-" + [guid]::NewGuid().ToString())
          New-Item -ItemType Directory -Force -Path $tmp | Out-Null
          $base = Join-Path $tmp 'base.vi'
          $head = Join-Path $tmp 'head.vi'
          Copy-Item -LiteralPath (Join-Path $env:GITHUB_WORKSPACE 'VI1.vi') -Destination $base -Force
          Copy-Item -LiteralPath (Join-Path $env:GITHUB_WORKSPACE 'VI2.vi') -Destination $head -Force
          "base=$base`nhead=$head" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8

      - name: Fixture Drift Orchestrator
        uses: ./.github/actions/fixture-drift
        with:
          render-report: 'true'
          comment-on-fail: 'true'
          upload-artifacts: 'true'
          artifact-name: fixture-drift-windows
          soft-fail: ${{ steps.docs.outputs.docs_only }}
          base-path: ${{ steps.prep.outputs.base }}
          head-path: ${{ steps.prep.outputs.head }}

      - name: Session index post (best-effort)
        if: always()
        uses: ./.github/actions/session-index-post
        with:
          results-dir: results/fixture-drift
          validate-schema: true
          upload: true
          artifact-name: fixture-drift-session-index

      - name: Runner Unblock Guard
        if: always()
        uses: ./.github/actions/runner-unblock-guard
        with:
          snapshot-path: results/fixture-drift/runner-unblock-snapshot.json
          cleanup: ${{ env.UNBLOCK_GUARD == '1' }}
          process-names: 'conhost,pwsh,LabVIEW,LVCompare'
