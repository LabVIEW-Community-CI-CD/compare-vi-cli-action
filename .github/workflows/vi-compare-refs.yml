name: Manual VI Compare (refs)

on:
  workflow_dispatch:
    inputs:
      sample_id:
        description: 'Optional sample id for concurrency grouping'
        required: false
        type: string
      vi_name:
        description: 'VI filename (e.g. VI1.vi)'
        required: true
        default: 'VI1.vi'
        type: string
      base_commit:
        description: 'Base git commit/ref'
        required: true
        default: 'f953572a18194b58ca4d05383c2795c56cc24865'
        type: string
      head_commit:
        description: 'Head git commit/ref'
        required: true
        default: 'd173970c182842b39b21ff1ec14821496191b9a7'
        type: string
      flag_noattr:
        description: 'Ignore VI attributes (-noattr)'
        required: false
        type: boolean
        default: true
      flag_nofp:
        description: 'Ignore front panel (-nofp)'
        required: false
        type: boolean
        default: true
      flag_nofppos:
        description: 'Ignore front panel position changes (-nofppos)'
        required: false
        type: boolean
        default: true
      flag_nobdcosm:
        description: 'Ignore block diagram cosmetic changes (-nobdcosm)'
        required: false
        type: boolean
        default: true
      additional_flags:
        description: 'Extra LVCompare flags (optional, space-delimited)'
        required: false
        default: ''
        type: string
      fail_on_diff:
        description: 'Fail the job when LVCompare reports differences'
        required: false
        default: 'false'
        type: choice
        options: ['true','false']

concurrency:
  group: ${{ github.workflow }}-${{ github.event.inputs.sample_id || github.ref }}
  cancel-in-progress: false

jobs:
  preflight:
    runs-on: [self-hosted, Windows, X64]
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v5
      - name: Verify LVCompare and idle LabVIEW state
        shell: pwsh
        run: |
          $cli = 'C:\Program Files\National Instruments\Shared\LabVIEW Compare\LVCompare.exe'
          if (-not (Test-Path -LiteralPath $cli)) {
            Write-Host "::error::LVCompare.exe not found at canonical path: $cli"; exit 1
          }
          $lv = Get-Process -Name 'LabVIEW' -ErrorAction SilentlyContinue
          if ($lv) { Write-Host "::error::LabVIEW.exe is running (PID(s): $($lv.Id -join ','))"; exit 1 }
          Write-Host 'Preflight OK: LVCompare present; LabVIEW not running.'

  compare:
    runs-on: [self-hosted, Windows, X64]
    needs: preflight
    timeout-minutes: 30
    env:
      UNBLOCK_GUARD: '1'
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Ensure refs available
        shell: pwsh
        run: |
          git fetch --all --prune --prune-tags --tags

      - name: Compare VI between refs
        id: compare
        shell: pwsh
        env:
          VI_NAME: ${{ inputs.vi_name }}
          BASE_REF: ${{ inputs.base_commit }}
          HEAD_REF: ${{ inputs.head_commit }}
          FLAG_NOATTR: ${{ inputs.flag_noattr }}
          FLAG_NOFP: ${{ inputs.flag_nofp }}
          FLAG_NOFPPOS: ${{ inputs.flag_nofppos }}
          FLAG_NOBDCOSM: ${{ inputs.flag_nobdcosm }}
          EXTRA_FLAGS: ${{ inputs.additional_flags }}
          FAIL_ON_DIFF: ${{ inputs.fail_on_diff }}
        run: |
          $ErrorActionPreference = 'Stop'
          $resultsDir = Join-Path $env:GITHUB_WORKSPACE 'tests/results/ref-compare'
          New-Item -ItemType Directory -Path $resultsDir -Force | Out-Null
          $outName = $env:VI_NAME -replace '[\\/:]+','_'
          if ([string]::IsNullOrWhiteSpace($outName)) { $outName = 'vi-compare' }
          $scriptPath = Join-Path $env:GITHUB_WORKSPACE 'tools/Compare-RefsToTemp.ps1'
          $flagList = @()
          if ($env:FLAG_NOATTR -eq 'true') { $flagList += '-noattr' }
          if ($env:FLAG_NOFP -eq 'true') { $flagList += '-nofp' }
          if ($env:FLAG_NOFPPOS -eq 'true') { $flagList += '-nofppos' }
          if ($env:FLAG_NOBDCOSM -eq 'true') { $flagList += '-nobdcosm' }
          if (-not [string]::IsNullOrWhiteSpace($env:EXTRA_FLAGS)) {
            $flagList += $env:EXTRA_FLAGS
          }
          if ($flagList -notcontains '-nobd') { $flagList = @('-nobd') + $flagList }
          $args = @(
            '-NoLogo','-NoProfile','-File', $scriptPath,
            '-ViName', $env:VI_NAME,
            '-RefA', $env:BASE_REF,
            '-RefB', $env:HEAD_REF,
            '-ResultsDir', $resultsDir,
            '-OutName', $outName,
            '-Detailed',
            '-RenderReport',
            '-Quiet'
          )
          if ($flagList.Count -gt 0) {
            $args += '-LvCompareArgs'
            $args += ($flagList -join ' ')
          }
          if ($env:FAIL_ON_DIFF -eq 'true') { $args += '-FailOnDiff' }
          $proc = Start-Process -FilePath 'pwsh' -ArgumentList $args -Wait -PassThru -WindowStyle Hidden
          if ($proc.ExitCode -ne 0) {
            throw "Compare-RefsToTemp.ps1 exited with $($proc.ExitCode). See logs for details."
          }
          $summaryPath = Join-Path $resultsDir ("{0}-summary.json" -f $outName)
          if (-not (Test-Path -LiteralPath $summaryPath)) {
            throw "Summary not found at $summaryPath"
          }
          "summaryPath=$summaryPath" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          "resultsDir=$resultsDir" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          "outName=$outName" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append

      - name: Append summary
        if: ${{ always() && steps.compare.outputs.summaryPath != '' }}
        shell: pwsh
        env:
          SUMMARY_PATH: ${{ steps.compare.outputs.summaryPath }}
        run: |
          $ErrorActionPreference = 'Stop'
          $summary = Get-Content -LiteralPath $env:SUMMARY_PATH -Raw | ConvertFrom-Json
          $lines = @('### LVCompare Ref Diff','')
          $lines += "- VI: $($summary.name)"
          $lines += "- Path: $($summary.path)"
          $lines += "- Base ref: $($summary.refA)"
          $lines += "- Head ref: $($summary.refB)"
          $lines += "- Diff detected: $($summary.cli.diff)"
          $lines += "- Exit code: $($summary.cli.exitCode)"
          if ($summary.out.reportHtml) { $lines += "- Report: $($summary.out.reportHtml)" }
          if ($summary.cli.highlights) {
            $lines += ''
            $lines += '#### Highlights'
            foreach ($h in $summary.cli.highlights) { $lines += "- $h" }
          }
          $lines -join "`n" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append -Encoding utf8

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vi-compare-refs
          path: ${{ steps.compare.outputs.resultsDir }}/**
          if-no-files-found: warn

      - name: Runner Unblock Guard
        if: always()
        uses: ./.github/actions/runner-unblock-guard
        with:
          snapshot-path: tests/results/runner-unblock-snapshot.json
          cleanup: ${{ env.UNBLOCK_GUARD == '1' }}
          process-names: 'conhost,pwsh,LabVIEW,LVCompare'
